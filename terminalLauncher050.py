import os
from time import sleep

class P:
    def e(self):
        return input('Launcher>>>')
p = P()

print("Welcome to the Terminal Launcher")
sleep(1)
print("Do you have a previous version of Terminal on you computer? (Yes/No)")
pV = p.e()
if pV.lower() == "no":
    print("Is this launcher in a folder with nothing else in it? (Yes/No)")
    folder = p.e()
    if folder.lower() == 'yes':
        print('What will your admin name be?')
        aN = p.e()
        print('What will your admin username be?')
        aU = p.e()
        print('What will you admin password be?')
        aP = p.e()
        print('8 text files are about to be added to the folder that this launcher is in. OK? (Yes/No)')
        okay = p.e()
        if okay.lower() == 'yes':
            print('Please don\'t delete or raname any of the files that are about to be added to this folder.')
            sleep(2)
            print('The program needs them to run, and if you delete or rename them then the program will fail.')
            sleep(2)
            print('For the same reason, please don\'t move any of the files, unless you move all of them. (Which is what the folder is for.)')
            sleep(2)
            print('Proceed? (Yes/No)')
            proceed = p.e()
            if proceed.lower() == 'yes':
                def createFile(fileName, toWrite1, toWrite2 = ""):
                    with open(fileName + '.txt', 'w') as file:
                        file.write(toWrite1 + '\n' + toWrite2)
                sleep(2)
                print("Adding file: 'adUs.txt'")
                createFile('adUs', aN, aU)
                sleep(2)
                print("Adding file: 'adPs.txt'")
                createFile('adPs', aU, aP)
                sleep(2)
                print("Adding file: 'adEt.txt'")
                createFile('adEt', aN, '>>>')
                pH = 'placeholder'
                sleep(2)
                print("Adding file: 'nAdUs.txt'")
                createFile('nAdUs', pH, pH)
                sleep(2)
                print("Adding file: 'nAdPs.txt'")
                createFile('nAdPs', pH, pH)
                sleep(2)
                print("Adding file: 'nAdEt.txt'")
                createFile('nAdEt', pH, ">>>")
                sleep(2)
                print("Adding file: 'sAdmin.txt'")
                createFile('sAdmin', aN)
                sleep(2)
                print("Adding file: 'projectTerminal050.txt'")
                with open('projectTerminal050.txt', 'w') as file:
                    file.write('from time import sleep\n')
                    file.write('\n')
                    file.write('user = \"\"\n')
                    file.write('cU = \"\"\n')
                    file.write('sA = \"\"\n')
                    file.write('with open(\'sAdmin.txt\', \'r\') as file:\n')
                    file.write('    sA = file.readlines()\n')
                    file.write('\n')
                    file.write('sAdmin = sA[0]\n')
                    file.write('\n')
                    file.write('online = True\n')
                    file.write('\n')
                    file.write('entry = \"Terminal>>>\"\n')
                    file.write('\n')
                    file.write('cmd = []\n')
                    file.write('\n')
                    file.write('aU = [False, False]\n')
                    file.write('\n')
                    file.write('def openFile(fileName, listName):\n')
                    file.write('    with open(fileName + \".txt\", \"r\") as file:\n')
                    file.write('        content = file.readlines()\n')
                    file.write('        content = [x.strip() for x in content]\n')
                    file.write('        x = 1\n')
                    file.write('        while x < len(content):\n')
                    file.write('            listName[content[x-1]] = content[x]\n')
                    file.write('            x += 2\n')
                    file.write('\n')
                    file.write('adUs = {}\n')
                    file.write('openFile(\'adUs\', adUs)\n')
                    file.write('\n')
                    file.write('adPs = {}\n')
                    file.write('openFile(\'adPs\', adPs)\n')
                    file.write('\n')
                    file.write('adEt = {}\n')
                    file.write('openFile(\'adEt\', adEt)\n')
                    file.write('\n')
                    file.write('nAdUs = {}\n')
                    file.write('openFile(\'nAdUs\', nAdUs)\n')
                    file.write('\n')
                    file.write('nAdPs = {}\n')
                    file.write('openFile(\'nAdPs\', nAdPs)\n')
                    file.write('\n')
                    file.write('nAdEt = {}\n')
                    file.write('openFile(\'nAdEt\', nAdEt)\n')
                    file.write('\n')
                    file.write('class Update:\n')
                    file.write('    def admin(self):\n')
                    file.write('        openFile(\'adUs\' , adUs)\n')
                    file.write('        openFile(\'adPs\' , adPs)\n')
                    file.write('        openFile(\'adEt\', adEt)\n')
                    file.write('    def user(self):\n')
                    file.write('        openFile(\'nAdUs\' , nAdUs)\n')
                    file.write('        openFile(\'nAdPs\' , nAdPs)\n')
                    file.write('        openFile(\'nAdEt\' , nAdEt)\n')
                    file.write('update = Update()\n')
                    file.write('\n')
                    file.write('class Admin:\n')
                    file.write('    def __init__(self):\n')
                    file.write('        self.delete = self.Delete()\n')
                    file.write('        self.account = self.Account()\n')
                    file.write('    def newAdmin(self, name, us, ps):\n')
                    file.write('        def fileOpen(fileName, in1, in2):\n')
                    file.write('            with open(fileName + \".txt\", \"a\") as file:\n')
                    file.write('                file.write(\"\\n\" + in1)\n')
                    file.write('                file.write(\"\\n\" + in2)\n')
                    file.write('        fileOpen(\"adUs\", name, us)\n')
                    file.write('        fileOpen(\"adPs\", us, ps)\n')
                    file.write('        fileOpen(\"adEt\", adEt, \">>>\")\n')
                    file.write('    def newUser(self, name, us, ps):\n')
                    file.write('        def fileOpen(fileName, in1, in2):\n')
                    file.write('            with open(fileName + \".txt\", \"a\") as file:\n')
                    file.write('                file.write(\"\\n\" + in1)\n')
                    file.write('                file.write(\"\\n\" + in2)\n')
                    file.write('        fileOpen(\"nAdUs\", name, us)\n')
                    file.write('        fileOpen(\"nAdPs\", us, ps)\n')
                    file.write('        fileOpen(\"nAdEt\", nAdEt, \">>>\")\n')
                    file.write('    class Account:\n')
                    file.write('        def __init__(self):\n')
                    file.write('            self.change = self.Change()\n')
                    file.write('        class Change:\n')
                    file.write('            def tag(self, newTag):\n')
                    file.write('                global adEt\n')
                    file.write('                aKeys = list(adEt.keys())\n')
                    file.write('                aUsers = []\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(aKeys):\n')
                    file.write('                    aUsers.append(adEt[aKeys[x]])\n')
                    file.write('                    x += 1\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(adEt):\n')
                    file.write('                    if nAdUs[aKeys[x]] == nAdUs[cU]:\n')
                    file.write('                        aUsers[x] = newTag\n')
                    file.write('                    x += 1\n')
                    file.write('                with open(\'nAdEt.txt\', \'w\') as file:\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < (len(aKeys) + len(aUsers)) / 2:\n')
                    file.write('                        if x != 0:\n')
                    file.write('                            file.write(\'\\n\' + aKeys[x])\n')
                    file.write('                        else:\n')
                    file.write('                            file.write(aKeys[x])\n')
                    file.write('                        file.write(\'\\n\' + aUsers[x])\n')
                    file.write('                        x += 1\n')
                    file.write('    class Delete:\n')
                    file.write('        def user(self, nU, theUser):\n')
                    file.write('            def aW(aUP, name):\n')
                    file.write('                aKeys = list(aUP.keys())\n')
                    file.write('                aUsers = []\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(aKeys):\n')
                    file.write('                    aUsers.append(aUP[aKeys[x]])\n')
                    file.write('                    x += 1\n')
                    file.write('                with open(name + \'.txt\', \'w\') as file:\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < (len(aKeys) + len(aUsers)) / 2:\n')
                    file.write('                        if x != 0:\n')
                    file.write('                            file.write(\'\\n\' + aKeys[x])\n')
                    file.write('                        else:\n')
                    file.write('                            file.write(aKeys[x])\n')
                    file.write('                        file.write(\'\\n\' + aUsers[x])\n')
                    file.write('                        x += 1\n')
                    file.write('            if nU.lower() == \"name\":\n')
                    file.write('                if theUser in nAdUs.keys():\n')
                    file.write('                    del nAdPs[nAdUs[theUser]]\n')
                    file.write('                    aW(nAdPs, \'nAdPs\')\n')
                    file.write('                    del endTag[nAdUs[thUser]]\n')
                    file.write('                    aW(endTag, \'nAdEt\')\n')
                    file.write('                    del nAdUs[theUser]\n')
                    file.write('                    aW(nAdUs, \'nAdUs\')\n')
                    file.write('                    print(\"User\", theUser, \"deleted\")\n')
                    file.write('                else:\n')
                    file.write('                    print(\"Name doesn\'t exist\")\n')
                    file.write('            elif nU.lower == \"username\":\n')
                    file.write('                if theUser in nAdPs.keys():\n')
                    file.write('                    aKeys = nAdUs.keys()\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < len(nAdUs):\n')
                    file.write('                        if adUs[aKeys[x]] == theUser:\n')
                    file.write('                            del adUs[aKeys[x]]\n')
                    file.write('                            del endTag[aKeys[x]]\n')
                    file.write('                        x += 1\n')
                    file.write('                    aW(nAdUs, \'nAdUs\')\n')
                    file.write('                    aW(nAdEt, \'nAdEt\')\n')
                    file.write('                    del nAdPs[theUser]\n')
                    file.write('                    aW(nAdPs, \'nAdPs\')\n')
                    file.write('                    print(\"Username\", theUser, \"deleted\")\n')
                    file.write('                else:\n')
                    file.write('                    print(\"Username doesn\'t exist\")\n')
                    file.write('        def admin(self, nU, theUser):\n')
                    file.write('            def aW(aUP, name):\n')
                    file.write('                aKeys = list(aUP.keys())\n')
                    file.write('                aUsers = []\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(aKeys):\n')
                    file.write('                    aUsers.append(aUP[aKeys[x]])\n')
                    file.write('                    x += 1\n')
                    file.write('                with open(name + \'.txt\', \'w\') as file:\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < (len(aKeys) + len(aUsers)) / 2:\n')
                    file.write('                        if x != 0:\n')
                    file.write('                            file.write(\'\\n\' + aKeys[x])\n')
                    file.write('                        else:\n')
                    file.write('                            file.write(aKeys[x])\n')
                    file.write('                        file.write(\'\\n\' + aUsers[x])\n')
                    file.write('                        x += 1\n')
                    file.write('            if nU.lower() == \"name\":\n')
                    file.write('                if theUser in adUs.keys():\n')
                    file.write('                    del adPs[adUs[theUser]]\n')
                    file.write('                    aW(adPs, \"adPs\")\n')
                    file.write('                    del endTag[theUser]\n')
                    file.write('                    aW(endTag, \"adEt\")\n')
                    file.write('                    del adUs[theUser]\n')
                    file.write('                    aW(adUs, \"adUs\")\n')
                    file.write('                    print(\"User\", theUser, \"deleted\")\n')
                    file.write('                else:\n')
                    file.write('                    print(\"Name doesn\'t exist\")\n')
                    file.write('            elif nU.lower == \"username\":\n')
                    file.write('                if theUser in adPs.keys():\n')
                    file.write('                    aKeys = adUs.keys()\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < len(adUs):\n')
                    file.write('                        if adUs[aKeys[x]] == theUser:\n')
                    file.write('                            del adUs[aKeys[x]]\n')
                    file.write('                            del endTag[aKeys[x]]\n')
                    file.write('                        x += 1\n')
                    file.write('                    aW(adUs, \"adUs\")\n')
                    file.write('                    aW(adEt, \'adEt\')\n')
                    file.write('                    del adPs[theUser]\n')
                    file.write('                    aW(adEt, \"adEt\")\n')
                    file.write('                    print(\"Username\", theUser, \"deleted\")\n')
                    file.write('                else:\n')
                    file.write('                    print(\"Username doesn\'t exist\")\n')
                    file.write('admin = Admin()\n')
                    file.write('\n')
                    file.write('class NonAd:\n')
                    file.write('    def __init__(self):\n')
                    file.write('        self.account = self.Account()\n')
                    file.write('    class Account:\n')
                    file.write('        def __init__(self):\n')
                    file.write('            self.change = self.Change()\n')
                    file.write('        class Change:\n')
                    file.write('            def tag(self, newTag):\n')
                    file.write('                global nAdEt\n')
                    file.write('                aKeys = list(nAdEt.keys())\n')
                    file.write('                aUsers = []\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(aKeys):\n')
                    file.write('                    aUsers.append(nAdEt[aKeys[x]])\n')
                    file.write('                    x += 1\n')
                    file.write('                x = 0\n')
                    file.write('                while x < len(nAdEt):\n')
                    file.write('                    if nAdUs[aKeys[x]] == nAdUs[cU]:\n')
                    file.write('                        aUsers[x] = newTag\n')
                    file.write('                    x += 1\n')
                    file.write('                with open(\'nAdEt.txt\', \'w\') as file:\n')
                    file.write('                    x = 0\n')
                    file.write('                    while x < (len(aKeys) + len(aUsers)) / 2:\n')
                    file.write('                        if x != 0:\n')
                    file.write('                            file.write(\'\\n\' + aKeys[x])\n')
                    file.write('                        else:\n')
                    file.write('                            file.write(aKeys[x])\n')
                    file.write('                        file.write(\'\\n\' + aUsers[x])\n')
                    file.write('                        x += 1\n')
                    file.write('nAd = NonAd()\n')
                    file.write('\n')
                    file.write('class NoLogin:\n')
                    file.write('    def newUser(self, name, us, ps):\n')
                    file.write('        def fileOpen(fileName, in1, in2):\n')
                    file.write('            with open(fileName + \".txt\", \"a\") as file:\n')
                    file.write('                file.write(\"\\n\" + in1)\n')
                    file.write('                file.write(\"\\n\" + in2)\n')
                    file.write('        fileOpen(\"nAdUs\", name, us)\n')
                    file.write('        fileOpen(\"nAdPs\", us, ps)\n')
                    file.write('        fileOpen(\"nAdEt\", name, \">>>\")\n')
                    file.write('noLog = NoLogin()\n')
                    file.write('\n')
                    file.write('class P:\n')
                    file.write('    global endTag\n')
                    file.write('    global cU\n')
                    file.write('    def e(self, m = \'0\'):\n')
                    file.write('        if m == \'0\':\n')
                    file.write('            toReturn = input(entry).split()\n')
                    file.write('            return toReturn[0]\n')
                    file.write('        elif m == \'1\':\n')
                    file.write('            return input(entry).split()\n')
                    file.write('    def n(self):\n')
                    file.write('        print(\"\")\n')
                    file.write('    def d(self, m, exe = \"\"):\n')
                    file.write('        if aU[0] == True:\n')
                    file.write('            if m == \'0\':\n')
                    file.write('                return \"Terminal/User/\" + cU + \"/\" + exe + \"\" + nAdEt[cU]\n')
                    file.write('            elif m == \'1\':\n')
                    file.write('                return \"Terminal/User/\" + exe + \"\" + nAdEt[cU]\n')
                    file.write('        elif aU[1] == True:\n')
                    file.write('            if m == \'0\':\n')
                    file.write('                return \"Terminal/Admin/\" + cU + \"/\" + exe + \"\" + adEt[cU]\n')
                    file.write('            elif m == \'1\':\n')
                    file.write('                return \"Terminal/Admin/\" + exe + \"\" + adEt[cU]\n')
                    file.write('        else:\n')
                    file.write('            return \"Terminal/Error/\" + exe + \">>>\"\n')
                    file.write('p = P()\n')
                    file.write('\n')
                    file.write('cmd = \"\"\n')
                    file.write('def nd(command, num = 0):\n')
                    file.write('    return cmd[num].lower() == command\n')
                    file.write('\n')
                    file.write('def start():\n')
                    file.write('    global entry\n')
                    file.write('    global cU\n')
                    file.write('    tF = [True, True, True, True, True]\n')
                    file.write('    tF[0] = True\n')
                    file.write('    entry = \"Terminal>>>\"\n')
                    file.write('    while tF[0] == True:\n')
                    file.write('        print(\'Login, or signup?(0 = login, 1 = signup)\')\n')
                    file.write('        inup = p.e()\n')
                    file.write('        p.n()\n')
                    file.write('        if inup == \"0\":\n')
                    file.write('            tF[0] = False\n')
                    file.write('            tF[1] = True\n')
                    file.write('            while tF[1] == True:\n')
                    file.write('                print(\"User, or admin? (0 = user, 1 = admin)\")\n')
                    file.write('                entry = \"Terminal/login>>>\"\n')
                    file.write('                luser = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                if luser == \"0\":\n')
                    file.write('                    tF[1] = False\n')
                    file.write('                    print(\'Name?\')\n')
                    file.write('                    tF[2] = True\n')
                    file.write('                    while tF[2] == True:\n')
                    file.write('                        entry = \"Terminal/login/user/name>>>\"\n')
                    file.write('                        name = p.e()\n')
                    file.write('                        p.n()\n')
                    file.write('                        if name in nAdUs.keys():\n')
                    file.write('                            tF[2] = False\n')
                    file.write('                            print(\'Username?\')\n')
                    file.write('                            tF[3] = True\n')
                    file.write('                            while tF[3] == True:\n')
                    file.write('                                entry = \"Terminal/login/user/username>>>\"\n')
                    file.write('                                username = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                if username == nAdUs[name]:\n')
                    file.write('                                    tF[3] = False\n')
                    file.write('                                    print(\'Password?\')\n')
                    file.write('                                    tF[4] = True\n')
                    file.write('                                    while tF[4] == True:\n')
                    file.write('                                        entry = \"Terminal/login/user/password>>>\"\n')
                    file.write('                                        password = p.e()\n')
                    file.write('                                        p.n()\n')
                    file.write('                                        if password == nAdPs[username]:\n')
                    file.write('                                            tF[4] = False\n')
                    file.write('                                            cU = name\n')
                    file.write('                                            aU[0] = True\n')
                    file.write('                                            aU[1] = False\n')
                    file.write('                                        else:\n')
                    file.write('                                            print(\'Invalid password\')\n')
                    file.write('                                            print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                                            selection = p.e()\n')
                    file.write('                                            p.n()\n')
                    file.write('                                            if selection.lower() == \"yes\":\n')
                    file.write('                                                tF[1] = True\n')
                    file.write('                                                tF[4] = False\n')
                    file.write('                                else:\n')
                    file.write('                                    print(\'Invalid username\')\n')
                    file.write('                                    print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                                    selection = p.e()\n')
                    file.write('                                    p.n()\n')
                    file.write('                                    if selection.lower() == \"yes\":\n')
                    file.write('                                        tF[1] = True\n')
                    file.write('                                        tF[3] = False\n')
                    file.write('                        else:\n')
                    file.write('                            print(\'Invalid name\')\n')
                    file.write('                            print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                            selection = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            if selection.lower() == \"yes\":\n')
                    file.write('                                tF[1] = True\n')
                    file.write('                                tF[2] = False\n')
                    file.write('                elif luser == \"1\":\n')
                    file.write('                    tF[1] = False\n')
                    file.write('                    print(\'Name?\')\n')
                    file.write('                    tF[2] = True\n')
                    file.write('                    while tF[2] == True:\n')
                    file.write('                        entry = \"Terminal/login/admin/name>>>\"\n')
                    file.write('                        name = p.e()\n')
                    file.write('                        p.n()\n')
                    file.write('                        if name in adUs.keys():\n')
                    file.write('                            tF[2] = False\n')
                    file.write('                            print(\'Username?\')\n')
                    file.write('                            tF[3] = True\n')
                    file.write('                            while tF[3] == True:\n')
                    file.write('                                entry = \"Terminal/login/admin/username>>>\"\n')
                    file.write('                                username = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                if username == adUs[name]:\n')
                    file.write('                                    tF[3] = False\n')
                    file.write('                                    print(\'Password?\')\n')
                    file.write('                                    tF[4] = True\n')
                    file.write('                                    while tF[4] == True:\n')
                    file.write('                                        entry = \"Terminal/login/admin/password>>>\"\n')
                    file.write('                                        password = p.e()\n')
                    file.write('                                        p.n()\n')
                    file.write('                                        if password == adPs[username]:\n')
                    file.write('                                            tF[4] = False\n')
                    file.write('                                            cU = name\n')
                    file.write('                                            aU[0] = False\n')
                    file.write('                                            aU[1] = True\n')
                    file.write('                                        else:\n')
                    file.write('                                            print(\'Invalid password\')\n')
                    file.write('                                            print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                                            selection = p.e()\n')
                    file.write('                                            p.n()\n')
                    file.write('                                            if selection.lower() == \"yes\":\n')
                    file.write('                                                tF[1] = True\n')
                    file.write('                                                tF[4] = False\n')
                    file.write('                                else:\n')
                    file.write('                                    print(\'Invalid username\')\n')
                    file.write('                                    print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                                    selection = p.e()\n')
                    file.write('                                    p.n()\n')
                    file.write('                                    if selection.lower() == \"yes\":\n')
                    file.write('                                        tF[1] = True\n')
                    file.write('                                        tF[3] = False\n')
                    file.write('                        else:\n')
                    file.write('                            print(\'Invalid name\')\n')
                    file.write('                            print(\'Go back to user/admin selection? (Yes/No)\')\n')
                    file.write('                            selection = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            if selection.lower() == \"yes\":\n')
                    file.write('                                tF[1] = True\n')
                    file.write('                                tF[2] = False\n')
                    file.write('                else:\n')
                    file.write('                    print(\'Invalid input\')\n')
                    file.write('                    print(\'Go back to login/signup selection? (Yes/No)\')\n')
                    file.write('                    selection = p.e()\n')
                    file.write('                    p.n()\n')
                    file.write('                    if selection.lower() == \"yes\":\n')
                    file.write('                        tF[0] = True\n')
                    file.write('                        tF[1] = False\n')
                    file.write('        elif inup ==  \"1\":\n')
                    file.write('            entry = \"Terminal/signup>>>\"\n')
                    file.write('            tF[0] = False\n')
                    file.write('            print(\"What do you want your name to be?\")\n')
                    file.write('            while True:\n')
                    file.write('                entry = \"Terminal/signup/name>>>\"\n')
                    file.write('                newName = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                print(\"Your name will be - \" + newName)\n')
                    file.write('                print(\"OK? (Yes/No)\")\n')
                    file.write('                confirm = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                if confirm.lower() == \"yes\":\n')
                    file.write('                    break\n')
                    file.write('            print(\"What do you want your username to be?\")\n')
                    file.write('            while True:\n')
                    file.write('                entry = \"Terminal/signup/username>>>\"\n')
                    file.write('                newUsername = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                print(\"Your username will be - \" + newUsername)\n')
                    file.write('                print(\"OK? (Yes/No)\")\n')
                    file.write('                confirm = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                if confirm.lower() == \"yes\":\n')
                    file.write('                    break\n')
                    file.write('            print(\"What do you want your password to be?\")\n')
                    file.write('            while True:\n')
                    file.write('                entry = \"Terminal/signup/password>>>\"\n')
                    file.write('                newPassword = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                print(\"Your password will be - \" + newPassword)\n')
                    file.write('                print(\"OK? (Yes/No)\")\n')
                    file.write('                confirm = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                if confirm.lower() == \"yes\":\n')
                    file.write('                    break\n')
                    file.write('            noLog.newUser(newName, newUsername, newPassword)\n')
                    file.write('            update.user()\n')
                    file.write('            cU = newUsername\n')
                    file.write('        else:\n')
                    file.write('            print(\'Invalid input\')\n')
                    file.write('\n')
                    file.write('def main():\n')
                    file.write('    global online\n')
                    file.write('    global cU\n')
                    file.write('    global cmd\n')
                    file.write('    global entry\n')
                    file.write('    while online == True:\n')
                    file.write('        entry = p.d(\'1\', str(cU))\n')
                    file.write('        cmd = p.e(\'1\')\n')
                    file.write('        p.n()\n')
                    file.write('\n')
                    file.write('        if aU[0] == True or aU[1] == True:\n')
                    file.write('            if nd(\'logout\'):\n')
                    file.write('                p.d(\'0\', \'logout\')\n')
                    file.write('                cU = \"\"\n')
                    file.write('                start()\n')
                    file.write('            elif nd(\'shutdown\'):\n')
                    file.write('                p.d(\'0\', \'shutdown\')\n')
                    file.write('                print(\'Are you sure? (Yes/No)\')\n')
                    file.write('                confirm = p.e()\n')
                    file.write('                p.n()\n')
                    file.write('                if confirm.lower() == \"yes\":\n')
                    file.write('                    p.d(\'0\', \'shutdown/yes\')\n')
                    file.write('                    print(\"Shutting down in 10 seconds\")\n')
                    file.write('                    x = 9\n')
                    file.write('                    while x > 0:\n')
                    file.write('                        sleep(1)\n')
                    file.write('                        print(str(x) + \"...\")\n')
                    file.write('                        x -= 1\n')
                    file.write('                    sleep(1)\n')
                    file.write('                    print(\'0\')\n')
                    file.write('                    print(\'Good bye \' + cU + \"!\\nCan\'t wait to see you next time!\")\n')
                    file.write('                    online = False\n')
                    file.write('                else:\n')
                    file.write('                    p.d(\'0\', \'shutdown/no\')\n')
                    file.write('                    print(\'Shutdown aborted\')\n')
                    file.write('            elif nd(\'account\'):\n')
                    file.write('                if nd(\'change\', 1):\n')
                    file.write('                    if nd(\'endtag\', 2):\n')
                    file.write('                        if aU[0] == True:\n')
                    file.write('                            nAd.account.change.tag(cmd[3])\n')
                    file.write('                            update.user()\n')
                    file.write('                        elif aU[1] == True:\n')
                    file.write('                            admin.account.change.tag(cmd[3])\n')
                    file.write('                            update.admin()\n')
                    file.write('            elif aU[1] == True:\n')
                    file.write('                if nd(\'new\'):\n')
                    file.write('                    p.d(\'0\', \'new\')\n')
                    file.write('                    if nd(\"user\", 1):\n')
                    file.write('                        p.d(\'0\', \'new/user\')\n')
                    file.write('                        print(\"What do you want the name to be?\")\n')
                    file.write('                        while True:\n')
                    file.write('                            p.d(\'0\', \'new/user/name\')\n')
                    file.write('                            newName = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            print(\"The name will be - \" + newName)\n')
                    file.write('                            print(\"OK? (Yes/No)\")\n')
                    file.write('                            confirm = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            if confirm.lower() == \"yes\":\n')
                    file.write('                                break\n')
                    file.write('                        print(\"What do you want the username to be?\")\n')
                    file.write('                        while True:\n')
                    file.write('                            p.d(\'0\', \'new/user/username\')\n')
                    file.write('                            newUsername = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            print(\"The username will be - \" + newUsername)\n')
                    file.write('                            print(\"OK? (Yes/No)\")\n')
                    file.write('                            confirm = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            if confirm.lower() == \"yes\":\n')
                    file.write('                                break\n')
                    file.write('                        print(\"What do you want the password to be?\")\n')
                    file.write('                        while True:\n')
                    file.write('                            p.d(\'0\', \'new/user/password\')\n')
                    file.write('                            newPassword = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            print(\"The password will be - \" + newPassword)\n')
                    file.write('                            print(\"OK? (Yes/No)\")\n')
                    file.write('                            confirm = p.e()\n')
                    file.write('                            p.n()\n')
                    file.write('                            if confirm.lower() == \"yes\":\n')
                    file.write('                                break\n')
                    file.write('                        admin.newUser(newName, newUsername, newPassword)\n')
                    file.write('                        update.user()\n')
                    file.write('                    if nd(\'admin\', 1):\n')
                    file.write('                        if cU == sAdmin:\n')
                    file.write('                            p.d(\'0\', \'new/admin\')\n')
                    file.write('                            print(\"What do you want the name to be?\")\n')
                    file.write('                            while True:\n')
                    file.write('                                p.d(\'0\', \'new/admin/name\')\n')
                    file.write('                                newName = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                print(\"The name will be - \" + newName)\n')
                    file.write('                                print(\"OK? (Yes/No)\")\n')
                    file.write('                                confirm = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                if confirm.lower() == \"yes\":\n')
                    file.write('                                    break\n')
                    file.write('                            print(\"What do you want the username to be?\")\n')
                    file.write('                            while True:\n')
                    file.write('                                p.d(\'0\', \'new/admin/username\')\n')
                    file.write('                                newUsername = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                print(\"The username will be - \" + newUsername)\n')
                    file.write('                                print(\"OK? (Yes/No)\")\n')
                    file.write('                                confirm = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                if confirm.lower() == \"yes\":\n')
                    file.write('                                    break\n')
                    file.write('                            print(\"What do you want the password to be?\")\n')
                    file.write('                            while True:\n')
                    file.write('                                p.d(\'0\', \'new/admin/password\')\n')
                    file.write('                                newPassword = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                print(\"The password will be - \" + newPassword)\n')
                    file.write('                                print(\"OK? (Yes/No)\")\n')
                    file.write('                                confirm = p.e()\n')
                    file.write('                                p.n()\n')
                    file.write('                                if confirm.lower() == \"yes\":\n')
                    file.write('                                    break\n')
                    file.write('                            admin.newAdmin(newName, newUsername, newPassword)\n')
                    file.write('                            update.admin()\n')
                    file.write('                        else:\n')
                    file.write('                            print(\"You don\'t have permisson to do that\")\n')
                    file.write('                elif nd(\'delete\'):\n')
                    file.write('                    if nd(\'user\', 1):\n')
                    file.write('                        if nd(\'name\', 2):\n')
                    file.write('                            admin.delete.user(\'name\', cmd[3])\n')
                    file.write('                            update.user()\n')
                    file.write('                        elif nd(\'username\', 2):\n')
                    file.write('                            admin.delete.user(\'username\', cmd[3])\n')
                    file.write('                            update.user()\n')
                    file.write('                        else:\n')
                    file.write('                            print(\"Value can\'t be \" + cmd[3] + \". Value must be either Name or Username\")\n')
                    file.write('                    elif nd(\'admin\', 1):\n')
                    file.write('                        if cU == sAdmin:\n')
                    file.write('                            if nd(\'name\', 2):\n')
                    file.write('                                admin.delete.admin(\'name\', cmd[3])\n')
                    file.write('                                update.admin()\n')
                    file.write('                            elif nd(\'username\', 2):\n')
                    file.write('                                admin.delete.admin(\'username\', cmd[3])\n')
                    file.write('                                update.admin()\n')
                    file.write('                            else:\n')
                    file.write('                                print(\"Value can\'t be \" + cmd[2] + \". Value must be either Name or Username\")\n')
                    file.write('                        else:\n')
                    file.write('                            print(\"You don\'t have permission to do that\")\n')
                    file.write('            else:\n')
                    file.write('                print(\'Command not recognised.\\n Did you misspell?\')\n')
                    file.write('\n')
                    file.write('print(\'Welcome to the Terminal!\')\n')
                    file.write('start()\n')
                    file.write('print(\'Welcome \', str(cU), \"!\")\n')
                    file.write('print(\'I hope you enjoy your session on Terminal!\')\n')
                    file.write('main()\n')
                sleep(1)
                print('Done adding files')
                sleep(1)
                print('Your admin account is a super admin account. You can do stuff that the other admins can\'t do. There is no way to create other super admins.')
                print('The reccommened Python interpreter to use would be one that can run Python 3.5.3.')
                sleep(2)
                print('You could use anything that\'s Python 3+, but unless you use Python 3.5.3, results aren\'t guaranteed and the program may not function properly.')
                sleep(2)
                print('If an error comes up, then don\'t worry. This is the end of the installer, so your Terminal will be almost all set up.')
                sleep(2)
                print('If an error does occur, then you will just have to manually change projectTerminal050.txt to projectTerminal050.py.')
                sleep(2)
                print('Atempting to change projectTerminal050.txt to projectTerminal050.py')
                os.rename('projectTerminal050.txt', 'projectTerminal050.py')
                sleep(2)
                print('Congratulations! The file name was successfuly changed, so you don\'t have to do it yourself.')
                sleep(2)
                print('This is the end of the installer.')
                sleep(1)
                print('Now you can run projectTerminal050.py in you Python interpreter, and sign in!')
                sleep(1)
                print('Please send any feedback about this program to epicoderlearner@gmail.com, wether it\'s a new command idea (and perhaps the code, if you want,) or a bug/glitch.')
                sleep(2)
                print('You can now close out of this installer, and you may delete it if you wish.')
            else:
                print('Very well. Shutting Terminal Installer down')
        else:
            print('Very well. Shutting Terminal Installer down.')
    else:
        print("Please put this launcher in a folder of it's own, as more files will be added via this launcher")
else:
    print('Please use the Terminal Updater, or else all user data will be deleted')
